clear allclose allclcload abalone.mat% labelCount = array2table(sum(labels == types), 'VariableNames', type_names)%% Data Manipulation% separate the dependent and independent variables% turn categorical into numerical array (M - 1, F - 2, I - 3)%sex = grp2idx(table2array(abalone(:, 1)));% construct full data matrixdata = table2array(abalone(:, 2 : 8));% obtain labels (age = rings + 1.5)age = table2array(abalone(:, 9)) + 1.5;% %% Convolutional Neural Network Training% approximately 90% of images are used for training; the rest are used for% validationsz_training = floor(0.9 * size(data, 1));% generate random indices to use for trainingrandom_indices = randperm(size(data, 1));% generate training and validation data using random indicestraining_data = data(random_indices(1 : sz_training), :);validation_data = data(random_indices(sz_training + 1 : end), :);% % % define categorical labels for later use% training_age = age(random_indices(1 : sz_training));% validation_age = age(random_indices(sz_training + 1 : end));net = fitnet([10 10 10]);% net.trainParam.showWindow = false;% net.trainParam.showCommandLine = false;% trained_net = train(net, training_data', training_age');[trained_net, tr] = train(net, data', age');pred_age = trained_net(data(:, :)');test_age = age(:)';mse = sum((pred_age - test_age) .^ 2) / size(age, 1)plotperform(tr)% plotconfusion(age', trained_net(data'))%accuracy = sum(predictedLabels == valLabels) / numel(valLabels);
% COSE281 ENGINEERING MATHEMATICS 2019 FINAL PROJECT% STUDENT IDs: 2015320143, 2016320128, 2018320250% % ANN.m - use built-in artificial neural network functions to predict the%         age of abalone given certain features.% clear the workspace, close all figures and clear the output window % of Matlab.clear allclose allclc% load abalone dataload abalone.mat%% Data Manipulation% separate the dependent and independent variables% construct full data matrix (the first column, sex, is discarded as it is% a discrete variable)data = table2array(abalone(:, 2 : 8));% obtain labels (age = rings + 1.5)age = table2array(abalone(:, 9)) + 1.5;%% Artificial Neural Network Training% approximately 70% of the data are used for training; the rest are used% for validationsz_training = floor(0.7 * size(data, 1));% generate random indices to use for trainingrng('shuffle')random_indices = randperm(size(data, 1));% segment the data into training and validation sets using random indicestraining_data = data(random_indices(1 : sz_training), :);validation_data = data(random_indices(sz_training + 1 : end), :);% create corresponding training and validation agestraining_age = age(random_indices(1 : sz_training));validation_age = age(random_indices(sz_training + 1 : end));% set up the network% the following model gave the best resultsnet = fitnet([10 10 10]); % 3 hidden layers with 10 neurons each% set options for net (comment for GUI)net.trainParam.showWindow = false;net.trainParam.showCommandLine = false;% train the network using training datatrained_net = train(net, training_data', training_age');% calculate RMSE using unseen datapred_age = trained_net(validation_data(:, :)');% the RMSE was approximately 2.14 on averagermse = sqrt(sum((pred_age - validation_age') .^ 2) / size(validation_age, 1))% % however, the performance of a network as simple as the following was% % comparable (RMSE difference of approx. <10%)% % % approximately a linear regression (7 inputs *% % weights/coefficients + bias/intercept with an activation function)% net2 = fitnet([1]);% % net2.trainParam.showWindow = false;% net2.trainParam.showCommandLine = false;% % % train the network using training data% trained_net = train(net2, training_data', training_age');% % % calculate RMSE using unseen data% pred_age = trained_net(validation_data(:, :)');% % % the RMSE was approximately 2.22 on average% rmse = sqrt(sum((pred_age - validation_age') .^ 2) / size(validation_age, 1))%% Mean RMSE Testing Code% % % perform 50 iterations of generating and training networks with certain% % architectures to check if architectural differences have an impact in% % predicting the age of abalone% % rmse_testing = zeros(50, 2);% rng('shuffle')% % % train a more complicated network% for i = 1 : 50%     random_indices = randperm(size(data, 1));%     %     training_data = data(random_indices(1 : sz_training), :);%     validation_data = data(random_indices(sz_training + 1 : end), :);%     training_age = age(random_indices(1 : sz_training));%     validation_age = age(random_indices(sz_training + 1 : end));%     %     net_testing = fitnet([10 10 10]); % 3 hidden layers with 10 neurons each%     net_testing.trainParam.showWindow = false;%     net_testing.trainParam.showCommandLine = false;% %     trained_net = train(net_testing, training_data', training_age');%     pred_age = trained_net(validation_data(:, :)');%     rmse_testing(i, 1) = sqrt(sum((pred_age - validation_age') .^ 2) / size(validation_age, 1));% end% % % train a simpler network% for i = 1 : 50%     random_indices = randperm(size(data, 1));%     %     training_data = data(random_indices(1 : sz_training), :);%     validation_data = data(random_indices(sz_training + 1 : end), :);%     training_age = age(random_indices(1 : sz_training));%     validation_age = age(random_indices(sz_training + 1 : end));%     %     net_testing = fitnet([1]); % 1-neuron hidden layer%     net_testing.trainParam.showWindow = false;%     net_testing.trainParam.showCommandLine = false;% %     trained_net = train(net_testing, training_data', training_age');%     pred_age = trained_net(validation_data(:, :)');%     rmse_testing(i, 2) = sqrt(sum((pred_age - validation_age') .^ 2) / size(validation_age, 1));% end% %% Check if the network architecture actually makes a difference% % % hypothesis: 1, p_value: 7 * 10^-8 (null hypothesis rejected)% % mean_difference: -0.08 (<5% of RMSEs)% % % % the mean RMSEs of the two architectures are different but only marginally% mean_difference = mean(rmse_testing(:, 1)) - mean(rmse_testing(:, 2))% [hypothesis, p_value] = ttest2(rmse_testing(:, 1), rmse_testing(:, 2))%% Conclusion% The age of the abalone seem to mostly follow a very simple relationship% with the factors presented. How the factors are related is covered% elsewhere.